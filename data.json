{
	"choices": [
		{
			"title": "Completion",
			"description": "zsh is known for its powerful completion system. However it must be enabled. You probably want this.",
			"provides": "completion",
			"type": "radio",
			"options": [
				{
					"name": "Enable completion",
					"code": "autoload -Uz compinit && compinit",
					"enabled": true
				},
				{
					"name": "Leave completion disabled",
					"code": null,
					"enabled": false
				}
			]
		},
		{
			"title": "Completion: case sensitivity",
			"description": "When matching what you have typed to possible completions, zsh can ignore the case of what has been typed.",
			"requires": "completion",
			"type": "radio",
			"options": [
				{
					"name": "Match case sensitively",
					"code": null
				},
				{
					"name": "Let lowercase match uppercase",
					"code": "zstyle ':completion:*' matcher-list m:{[:lower:]}={[:upper:]}"
				},
				{
					"name": "Ignore case in completions",
					"code": "zstyle ':completion:*' matcher-list m:{[:lower:][:upper:]}={[:upper:][:lower:]}"
				}
			]
		},
		{
			"title": "Completion: color files",
			"description": "When completing files, the suggestions can be colored similar to ls with LS_COLORS.",
			"requires": "completion",
			"type": "radio",
			"options": [
				{
					"name": "Leave file completions uncolored",
					"code": null
				},
				{
					"name": "Color file completions",
					"code": "zstyle ':completion:*' list-colors ''"
				}
			]
		},
		{
			"title": "Completion: group suggestions",
			"description": "Completion suggestions can be grouped by the type of suggestion offered.",
			"requires": "completion",
			"type": "radio",
			"options": [
				{
					"name": "Group completions by type",
					"code": "zstyle ':completion:*' group-name ''\nzstyle ':completion:*' format '%B%d%b'"
				},
				{
					"name": "Do not group completions",
					"code": null
				}
			]
		},
		{
			"title": "Save history",
			"description": "History allows you to recall previous commands. Where should history be saved if at all?",
			"provides": "history",
			"type": "radio",
			"options": [
				{
					"name": "Save history to .zsh_history in your home folder",
					"code": "HISTFILE=$HOME/.zsh_history",
					"enabled": true
				},
				{
					"name": "Save history to XDG compliant location",
					"code": "HISTFILE=${XDG_STATE_HOME:-$HOME/.local/state}/zsh/histfile",
					"enabled": true
				},
				{
					"name": "Do not save history",
					"code": null,
					"enabled": false
				}
			]
		},
		{
			"title": "History: size",
			"description": "How many events should be kept in history?",
			"requires": "history",
			"type": "number",
			"default": 500,
			"code": "SAVEHIST={}"
		},
		{
			"title": "History: space prefix",
			"description": "On occasion you may want to exclude a single event from history. With this option you can start the command with a space and the command will not be saved. (It will be kept in memory until the next command is entered in case you made a typo and need to edit the line. It will disappear after that.)",
			"requires": "history",
			"type": "radio",
			"options": [
				{
					"name": "Do not save commands starting with a space to history",
					"code": "setopt HIST_IGNORE_SPACE"
				},
				{
					"name": "Save all commands",
					"code": null
				}
			]
		},
		{
			"title": "History: ignore duplicates",
			"description": "Some users prefer to omit duplicate events from history. You can either omit a command if it is the same as the command you just ran or look though all history for duplicates and save the most recently run version.",
			"requires": "history",
			"type": "radio",
			"options": [
				{
					"name": "Ignore a duplicate of the previous command",
					"code": "setopt HIST_IGNORE_DUPS"
				},
				{
					"name": "If a command is a duplicate of any previous command, remove the older copy",
					"code": "setopt HIST_IGNORE_ALL_DUPS"
				},
				{
					"name": "Save duplicates",
					"code": null
				}
			]
		},
		{
			"title": "History: sharing",
			"description": "When you have multiple shells running at once, history can be combined in a few different ways.",
			"requires": "history",
			"type": "radio",
			"options": [
				{
					"name": "Save commands to history as you run them",
					"code": "setopt INC_APPEND_HISTORY"
				},
				{
					"name": "Save commands to history as you run them and import the commands run in other terminals into history",
					"code": "setopt SHARE_HISTORY"
				},
				{
					"name": "Append history items when the shell exits",
					"code": "setopt APPEND_HISTORY"
				}
			]
		},
		{
			"title": "Extended glob",
			"description": "When extended globs are enabled, the # ~ and ^ characters can also be used for globbing and globbing flags are enabled. While these features are useful, they can be suprising to users used to other shells.",
			"provides": "extglob",
			"type": "radio",
			"options": [
				{
					"name": "Leave extended globs disabled",
					"code": null,
					"enabled": false
				},
				{
					"name": "Enable extended globs",
					"code": "setopt EXTENDED_GLOB",
					"enabled": true
				}
			]
		},
		{
			"title": "Extended glob: ^",
			"description": "The ^ extended glob can be troublesome in particular with <code>git show HEAD^</code>. While <code>git show HEAD~</code> is generally intended, some users prefer to disable the ^ glob.",
			"requires": "extglob",
			"type": "radio",
			"options": [
				{
					"name": "Leave ^ enabled",
					"code": null
				},
				{
					"name": "Disable ^ for extended globbing",
					"code": "disable -p '^'"
				}
			]
		},
		{
			"title": "Nomatch",
			"description": "By default zsh will error if a glob has no matches. This is the safest course of action as globs that should be passed literally into commands should be quoted. However it does differ from the bash behavior to pass globs through on no match.",
			"type": "radio",
			"options": [
				{
					"name": "Error if a glob has no matches",
					"code": null
				},
				{
					"name": "Pass the glob though as is if there are no matches",
					"code": "setopt NO_NOMATCH"
				},
				{
					"name": "Omit a glob if it has no matches, but error if all globs have no matches",
					"code": "setopt CSH_NULL_GLOB"
				},
				{
					"name": "Omit a glob if it has no matches",
					"code": "setopt NULL_GLOB"
				}
			]
		},
		{
			"title": "Autocd",
			"description": "If a command does not exist, check if it is the name of a directory and cd into it.",
			"type": "radio",
			"options": [
				{
					"name": "Leave autocd disabled",
					"code": null
				},
				{
					"name": "Enable autocd",
					"code": "setopt AUTO_CD"
				}
			]
		},
		{
			"title": "Beep",
			"description": "zsh may beep when completion is ambiguous or on input errors. Some users prefer to silence the beep.",
			"type": "radio",
			"options": [
				{
					"name": "Leave beep enabled",
					"code": null
				},
				{
					"name": "Disable beeping",
					"code": "setopt NO_BEEP"
				}
			]
		},
		{
			"title": "Interactive comments",
			"description": "By default comments are not enabled during interactive use. Some users prefer to allow comments to make copy pasting code easier.",
			"type": "radio",
			"options": [
				{
					"name": "Recognize comments on the command line",
					"code": "setopt INTERACTIVE_COMMENTS"
				},
				{
					"name": "Leave comments off during interactive use",
					"code": null
				}
			]
		},
		{
			"title": "Keymap",
			"description": "The keymap sets the default key bindings. Unless you know you prefer vi keybindings in your shell, you should choose emacs (even if you use vi(m)).",
			"type": "radio",
			"options": [
				{
					"name": "Emacs keybindings",
					"code": "bindkey -e"
				},
				{
					"name": "Vi keybindings",
					"code": "bindkey -v"
				}
			]
		},
		{
			"title": "Clobbering",
			"description": "By default redirections can overwrite existing files which can cause unintentional loss of data. zsh can instead error on these redirections unless <code>&gt;|</code> is used.",
			"type": "radio",
			"options": [
				{
					"name": "Error on a redirections which would overwrite an existing file",
					"code": "setopt NO_CLOBBER"
				},
				{
					"name": "Allow redirections to overwrite existing files",
					"code": null
				}
			]
		},
		{
			"title": "Multios",
			"description": "Multios is a zsh feature where if a command has multiple output redirections, the command's output is copied to each rather than just the last one. Similarly for input redirections, each input is read in turn. This option often results in surprising and hard to diagnose effects.",
			"type": "radio",
			"options": [
				{
					"name": "Disable multios",
					"code": "setopt NO_MULTIOS"
				},
				{
					"name": "Leave multios enabled",
					"code": null
				}
			]
		},
		{
			"title": "Flow Control",
			"description": "Flow control is a shell feature that allows a user to stop and restart output via Ctrl-s and Ctrl-q. This feature is rarely used in modern terminals and often surprises users who hit Ctrl-s as the terminal appears to freeze.",
			"type": "radio",
			"options": [
				{
					"name": "Disable flow control",
					"code": "setopt NO_FLOW_CONTROL"
				},
				{
					"name": "Leave flow control enabled",
					"code": null
				}
			]
		}
	]
}
